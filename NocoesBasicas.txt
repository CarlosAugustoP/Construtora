Library vs framework 
    - Uma library é um conjunto de funcionalidades focada em resolver um tipo de problema
    - Bibliotecas famosas: Date_fns e axios
        1. Manipulação de datas
        2. Client http
    - Frameworks: Funcionalidades que resolvem vários tipos de problemas
    Exemplo:
        - Angular
        - Vue

O que é o react? diferente do que muitos pensam, o react não é um framework. O react é uma biblioteca para construção de interfaces
- O react foca em interfaces de aplicações, ou seja, faz nada mais nada menos que criar "telinhas"
- Mas e o resto?    
    - A maior comunidade de frontend hoje é o react
    - Dezenas e centenas de pacotes sendo criados
    - React Router, styled components

Detalhes: React é para várias interfaces. Como desktop, mobile...
    - ReactDom: aplicações web
    - Reacte Native: mobile
    - React Native windows: Para apps windows

React + ReactDom + ReactRouter => Single page application
O react é basicamente javascript puro.

CONCEITOS REACT
    Componentes:
    - Um carro, por exemplo, possui rodas vidros, carroçaria
    - Componentes são isolados um dos outros, por exemplo, se furar o pneu, não quebra o vidro.
    - Todos eles são separados, porém, quando juntamos tudo, formamos um carro.
    - Lembram arquitetura em html com divs
    Como são criados os componentes?
    - Podemos criar componentes através de funções ou de classes. 
    - O react possui JSX. Basicamente a habilidade de escrever código html como javascript. por exemplo:

    import React from 'react';

    function App(){
        return <h1>Componente funcional</h1>
    }

    class App extends React.Component {
        render(){
            return <h1>componentes de classe</h1>
        }
    }

O nosso navegador não vai entender react.  Se você jogar no console, ele vai ficar bugado. Os navegafores evoluem mais devagar. Existem funcionalidades que browsers ainda nao suportam> Por isso, vamos usar uma ferramenta chamada babel. O babel faz uma transpilação de nosso código. Vai pegar nosso código, do jeito que a gente escreve e vai transformar em forma que os navegadores tenham suporte nativo.

Vamos usar também o webpack, que:
    1. Vai dar o super poder do javascript pode importar arquivos de imagem e arquivos css.
    2. Vai ser o nosso bundler. Vai pegar todos os arqivos que a gente tinha e vai converter tudo isso para um arquivo javascript.

Loaders: 
    - Pegar algo que o webpack não vai conseguir entender, e transformar em algo que o webpack vai entender.

Apenas um componente pai pode alterar um componente filho

O react não considera objetos um child legitimo. 
Para fazer isso acontecer, é necessário pegar um array de objetos e botar ele de react child